services:
  kafka:
    image: apache/kafka:4.1.0
    container_name: kafka
    logging:
      driver: "none"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_LOG_CLEANUP_POLICY: delete
      KAFKA_LOG_RETENTION_MS: 259200000 # 3 days

    healthcheck:
      test: /opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server kafka:9092 || exit 1
      interval: 2s
      start_interval: 2s
      start_period: 10s
      retries: 10

    networks:
        - kafka-network
      
  kafka-init-topic:
    image: apache/kafka:4.1.0
    entrypoint: ["/bin/sh", "/init-kafka-topic.sh"]
    environment:
      TOPIC_NAME: ${INGEST_TOPIC:-data-ingest}
      INSERTER_METRICS_TOPIC: ${INSERTER_METRICS_TOPIC:-inserter-metrics}
    volumes:
      - ./init-kafka-topic.sh:/init-kafka-topic.sh:ro
    networks:
      - kafka-network
    restart: "no"
    depends_on:
      kafka:
        condition: service_healthy

  data-inserter:
    build: 
      context: ./data-inserter
      dockerfile: Dockerfile
    container_name: data-inserter
    environment:
      KAFKA_SERVER: kafka:9092
      INGEST_TOPIC: ${INGEST_TOPIC:-data-ingest}
      TOPIC_PARTITIONS: 1
      LOG_TRIPS: false
      BURST_SIZE: 1000
      BURST_MIN_SLEEP_MS: 0
      DATA_FOLDER_PATH: /data/
    volumes:
      # - ./data/test/test_10k.csv:/data/data.csv
      - ./data/2018/201801-citibike-tripdata.csv:/data/data.csv
      # - ./data/202508/202508-citibike-tripdata_1.csv:/data/data.csv
      # - ./data/202508/:/data/
    depends_on:
      kafka:
        condition: service_healthy
      kafka-init-topic:
        condition: service_completed_successfully
    networks:
      - kafka-network

  metrics-collector:
    build:
      context: ./metrics-collector
      dockerfile: Dockerfile
    container_name: metrics-collector
    environment:
      KAFKA_SERVER: kafka:9092
      INGEST_TOPIC: ${INSERTER_METRICS_TOPIC:-inserter-metrics}
      MATCHES_TOPIC: ${MATCHES_TOPIC:-matches}
      LOG_BURSTS: false
      TOPIC_PARTITIONS: 1
    depends_on:
      kafka:
        condition: service_healthy
      kafka-init-topic:
        condition: service_completed_successfully
    networks:
      - kafka-network

  opencep:
    build:
      context: ./openCEP
      dockerfile: Dockerfile
    container_name: opencep
    environment:
      KAFKA_SERVER: kafka:9092
      INGEST_TOPIC: ${INGEST_TOPIC:-data-ingest}
      MATCHES_TOPIC: ${MATCHES_TOPIC:-matches}
      LOG_LEVEL: DEBUG
      WORKER_THREADS: 4
      QUERY_TYPE: ${QUERY_TYPE:-kleene}  # Options: "three_station", "kleene"
      THRESHOLD_MS: ${THRESHOLD_MS:-100}  # Load shedding threshold in milliseconds
      # TOPIC_PARTITIONS: 1
      # LOGS_ENABLED: false
    depends_on:
      kafka:
        condition: service_healthy
      kafka-init-topic:
        condition: service_completed_successfully
    networks:
      - kafka-network


networks:
  kafka-network:  
    driver: bridge
